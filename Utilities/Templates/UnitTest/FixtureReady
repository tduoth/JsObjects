#! /bin/bash

# Insert necessary loadNpmTasks and registerTasks into Gruntfile.js
awk '/registerTask/ && !x {
    print "    grunt.loadNpmTasks('\''grunt-contrib-jade'\'');"
    print "    grunt.loadNpmTasks('\''grunt-shell'\'');"
    print "    grunt.registerTask('\''fixture'\'', ['\''exec:stripExtends'\'', '\''jade'\'', '\''karma'\'']);"
    x=1;
}1' Gruntfile.js > tmp && mv tmp Gruntfile.js

# Insert preprocessor object into karma.conf.js
awk '/port:/ {
    print;
    print "        preprocessors: { '\''**/*.html'\'': [] },";
    next;
}1' karma.conf.js > tmp && mv tmp karma.conf.js

# Insert code to load jasmine-jquery
awk '/dist\/jquery./ {
    print;
    print "            '\''node_modules/jasmine-jquery/lib/*.js'\'',";
    next;
}1' karma.conf.js > tmp && mv tmp karma.conf.js

# Insert code to load any HTML files in the spec directories
awk '/public\/javascripts/ {
    print;
    print "            '\''spec/**/*.html'\'',";
    next;
}1' karma.conf.js > tmp && mv tmp karma.conf.js

# Insert spectReporter suppressed skipped
awk '/reporters:/ {
    print;
    print "\n        specReporter: { suppressSkipped: true },";
    next;
}1' karma.conf.js > tmp && mv tmp karma.conf.js

# Add test script to package.json
awk '/\"scripts\":/ {
    print;
    print "    \"test\": \"karma start\",";
    next;
}1' package.json > tmp && mv tmp package.json

awk '/err.status/ && ++n==2 {    
    print;
    print "\t\tconsole.log(err);";
    next;
}1' app.js > tmp && mv tmp app.js

# Install NPM packages
function npm_install() {
    npm install $1 --save-dev
}

# npm_install grunt-exec
# npm_install grunt-contrib-jade
# npm_install jasmine-jquery
